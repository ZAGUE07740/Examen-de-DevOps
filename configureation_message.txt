

#comment faire fonctionner votre code ?
#Lire attentivement !!!
#NB:je commente dans les limites de ma connaissance et je peux me tromper.Faites moi un retour
#liste de commandes à exécuter

git clone <url-du-projet> #pour vous mettre a jour- ou bien faire un "git pull origin main"

cd <mon_du_projet-ici "Examen-de-DevOps"> #pour vous deplacer dans le repertoire du projet

python -m venv <nom de votre environnement virtuel> #ce dossier est un environnement virtuel qui va contenir tous les packages utilisés(python, django)-Le nom du ficher est à souhait.Il s'agit de la methode de développement  recommandée.Après l'avoir créé vous devez l'ajouter dans un ficher .gitignore pour ne pas qu'il soit pris en compte dans les commit(vu que chacun a son propre env. virtuel) 

source <nom de votre environnement virtuel>/bin/activate.bat  #Cette commande active notre env. virtuel-operation necessaire pour la suite-vous remarquerez le prefixe de la ligne de cmd etre du nom de votre env. virtuel

pip install -r requirements.txt   #installation des packages necessaires (django etc.)- au cas ou cela ne fonctionne pas, installez d'abord pip.


#A présent , on vérifie que notre  Django fonctionne correctement en lancant le serveur puis en ouvrant la pade d'accueil avec le navigateur et  l'URL indiquée(généralement ' http://127.0.0.1:8000/ ')
python manage.py  appDevOps

python manage.py runserver #Pour lancer le serveur

#faire un CTRL+Break pour fermer le serveur

#P.S -Crééer dans le repertoire Examen-de-DevOps  un ficher ".gitignore" qui va contenir les noms des  fichers (précédés d'un point) qui ne doivent pas etre pris en compte dans vos commit; dans notre cas il s'agit de l'env. virtuel 

#Igor devra configurer les URL pour faire marcher la page web-Confère documentation de django
